#!/usr/bin/env python3

import glob
import os
import codecs
import json
import pwd
import grp


class App:
    def __init__(self):
        self.basepath = '/usr/share/lliurex-www/srv/links'
        self.destpath = '/var/lib/lliurex-www/links'
        self.wwwuser = pwd.getpwnam("www-data").pw_uid
        self.wwwgroup = grp.getgrnam("www-data").gr_gid


    def run(self):
        listfiles = glob.glob(os.path.join(self.basepath,'easy-*.json'))
        for x in listfiles:
            try:
                config = {}
                with codecs.open(x,'r', encoding='utf-8') as fd:
                    config = json.load(fd)
                    config['visibility'] = True
                    config['editable'] = False
                    config['order'] = 200
                dest_file = os.path.join( self.destpath, os.path.basename(x) )
                with codecs.open( dest_file , 'w', encoding='utf-8' ) as fd:
                    json.dump(config, fd, indent=4)
                os.chown(dest_file, self.wwwuser, self.wwwgroup)
                os.remove(x)
            except Exception as e:
                print("Error on process " + x )
                print("Exception ", str(e))
        
        listfiles = glob.glob(os.path.join(self.basepath,'hide_links','*.json'))
        for x in listfiles:
            try:
                config = {}
                with codecs.open(x,'r', encoding='utf-8') as fd:
                    config = json.load(fd)
                    config['visibility'] = False
                    config['editable'] = False
                    config['order'] = 200
                dest_file = os.path.join( self.destpath, os.path.basename(x) )
                with codecs.open( dest_file, 'w', encoding='utf-8' ) as fd:
                    json.dump( config, fd, indent=4)
                os.chown(dest_file, self.wwwuser, self.wwwgroup)
                os.remove(x)
            except Exception as e:
                print("Error on process " + x )
                print("Exception ", str(e))
            


if __name__ == "__main__":
    x = App()
    x.run()